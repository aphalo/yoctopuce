% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init-yoctopuce.R
\name{init_yoctopuce}
\alias{init_yoctopuce}
\alias{register_hubs}
\title{Initialise the API}
\usage{
init_yoctopuce(..., hub.url = "localhost:4444", force = FALSE)

register_hubs(hub.url = "localhost:4444", force = FALSE)
}
\arguments{
\item{...}{character Names of the yoctopuce Python modules to import from
the 'yoctopuce' Python library supporting the functions in the USB modules
that will be used.}

\item{hub.url}{character vector of URLs to YoctoHubs, including the port on
the hub to connect to, defaults to a virtual hub running locally, but
hardware and virtual hubs can be accessed through a LAN or the internet.
Passing `NULL` or `character()` skips hub registration.}

\item{force}{logical Force registration even if the same URL has been already
registered.}
}
\description{
Import the API and USB-module-specific functions and register to communicate
with USB modules through a virtual or physical hub.
}
\details{
This function is used to initialize the API and register to use one or more hubs.
The main API can be accessed through object \code{yocto_api} using the
\code{$} notation, and specific APIs using objects named after the APIs.
Beware that there is more than one level of nesting, so more than one `$` can
be needed. For example, for Python module 'yoctopuce.yocto_relay' the object
\code{yocto_relay} is created and can be used to access its members.

This function uses the Python API to check that the requested API extensions
are available, so it should work unchanged with future updates to the
YoctoPuce Python library, including after new modules are released as long
as the Python library installed is up-to-date.
}
\section{Warning!}{

Although the objects created to access Python library modules can persist
from one R session to a later one, their link to the Python library is
neither persistent nor restored. Thus, function `init_yoctopuce()` has to be
run at the start of each new R session, and Python modules reimported, even
if the objects have been saved. In general it is recommended not to import
the same Python modules more than once on a given session, although in
practice this does not seem to cause difficulties with the 'yoctopuce' Python
library.
}

